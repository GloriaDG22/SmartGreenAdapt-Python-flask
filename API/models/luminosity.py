# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model_ import Model
from .. import util


class Luminosity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id_luminosity=None, amount=None, date=None):  # noqa: E501
        """Luminosity - a model defined in OpenAPI

        :param id_luminosity: The id_luminosity of this Luminosity.  # noqa: E501
        :type id_luminosity: int
        :param amount: The amount of this Luminosity.  # noqa: E501
        :type amount: float
        :param date: The date of this Luminosity.  # noqa: E501
        :type date: str
        """
        self.openapi_types = {
            'id_luminosity': int,
            'amount': float,
            'date': str
        }

        self.attribute_map = {
            'id_luminosity': 'idLuminosity',
            'amount': 'amount',
            'date': 'date'
        }

        self._id_luminosity = id_luminosity
        self._amount = amount
        self._date = date

    @classmethod
    def from_dict(cls, dikt) -> 'Luminosity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Luminosity of this Luminosity.  # noqa: E501
        :rtype: Luminosity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_luminosity(self):
        """Gets the id_luminosity of this Luminosity.


        :return: The id_luminosity of this Luminosity.
        :rtype: int
        """
        return self._id_luminosity

    @id_luminosity.setter
    def id_luminosity(self, id_luminosity):
        """Sets the id_luminosity of this Luminosity.


        :param id_luminosity: The id_luminosity of this Luminosity.
        :type id_luminosity: int
        """

        self._id_luminosity = id_luminosity

    @property
    def amount(self):
        """Gets the amount of this Luminosity.


        :return: The amount of this Luminosity.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Luminosity.


        :param amount: The amount of this Luminosity.
        :type amount: float
        """

        self._amount = amount

    @property
    def date(self):
        """Gets the date of this Luminosity.


        :return: The date of this Luminosity.
        :rtype: str
        """
        return self._date

    @date.setter
    def date(self, date):
        """Sets the date of this Luminosity.


        :param date: The date of this Luminosity.
        :type date: str
        """

        self._date = date
